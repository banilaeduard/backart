// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Entities;

namespace BackArt.Migrations.ComplaintSeriesDb
{
    [DbContext(typeof(ComplaintSeriesDbContext))]
    partial class ComplaintSeriesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Code");
                });

            modelBuilder.Entity("WebApi.Entities.ComplaintSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("WebApi.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("WebApi.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodeId")
                        .HasColumnType("int");

                    b.Property<string>("CodeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComplaintSeriesId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("ComplaintSeriesId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("WebApi.Entities.Image", b =>
                {
                    b.HasOne("WebApi.Entities.Ticket", null)
                        .WithMany("Images")
                        .HasForeignKey("TicketId");
                });

            modelBuilder.Entity("WebApi.Entities.Ticket", b =>
                {
                    b.HasOne("WebApi.Entities.Code", "Code")
                        .WithMany()
                        .HasForeignKey("CodeId");

                    b.HasOne("WebApi.Entities.ComplaintSeries", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ComplaintSeriesId");

                    b.Navigation("Code");
                });

            modelBuilder.Entity("WebApi.Entities.ComplaintSeries", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("WebApi.Entities.Ticket", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
